@model SCore.Models.Order

@{
    ViewBag.Title = "Edit";
}

<h4>Edit</h4>


@using (Html.BeginForm())
{

<div class="form-horizontal">
    <h4>Order</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.OrderId)

    <div class="form-group">
        @Html.LabelFor(model => model.TimeOfOrder, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TimeOfOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TimeOfOrder, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-outline-primary" />
        </div>
    </div>
</div>
}

<div>
    <a class="btn btn-outline-primary" asp-action="Index" asp-controller="Orders" asp-route-productId="@Model.OrderId">
        Back to List
    </a>
</div>

